#+TITLE: EE4C10 Analog Circuit Design Fundamentals
#+SUBTITLE: Homework Assignment I
#+AUTHOR: Tzong Lin Chua
#+latex_class: article
#+latex_class_options:
#+latex_header:
#+latex_header: \usepackage[a4paper,left=0.5in,right=0.5in,top=0.5in,bottom=1in]{geometry}
#+latex_header: \usepackage{float}
#+latex_header_extra: \DeclareUnicodeCharacter{2212}{-}
#+latex_header_extra: \setcounter{secnumdepth}{0}
#+description:
#+keywords:
#+subtitle:
#+latex_compiler: pdflatex
#+date: \today
#+STARTUP: overview

#+begin_comment
#+begin_export latex
\begin{equation*}
\begin{align}

\end{align}
\end{equation*}
#+end_export
#+end_comment

* Problem 1
For $I_{D} = 40 \mu{}A$:
#+begin_export latex
\begin{equation*}
\begin{aligned}
I_{D} &= \frac{1.8V - V_{D}}{R} \\
V_{D} &= 1.8V - I_{D}R \\
\underline{V_{D} &= 1.0V}
\end{aligned}
\end{equation*}
#+end_export
Saturation region:
#+begin_export latex
\begin{equation*}
\begin{aligned}
V_{GS} &= 1.0V > V_{TH} \\
V_{GS} - V_{TH}&= 0.4V < V_{DS} \\
\end{aligned}
\end{equation*}
#+end_export

#+begin_src python :exports none
return 1.8 - 40e-6*20e3
#+end_src

#+RESULTS:
: 1.0

1. $\lambda = 0 V^{-1}$
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   I_{D} &= \frac{\mu_{n}C_{OX}}{2}\frac{W}{L}(V_{GS} - V_{TH})^{2} \\
   L &= \frac{\mu_{n}C_{OX}}{2}\frac{W}{I_{D}}(V_{GS} - V_{TH})^{2} \\
   \underline{L &= 0.39 \mu{}m}
   \end{aligned}
   \end{equation*}
   #+end_export

   #+begin_src python :exports none
   return (130e-6/2)*(1.5e-6/40e-6)*(1 - 0.6)**2
   #+end_src

   #+RESULTS:
   : 3.9e-07

2. $\lambda = 0.06 V^{-1}$
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   I_{D} &= \frac{\mu_{n}C_{OX}}{2}\frac{W}{L}(V_{GS} - V_{TH})^{2}(1 + \lambda{}V_{DS}) \\
   L &= \frac{\mu_{n}C_{OX}}{2}\frac{W}{I_{D}}(V_{GS} - V_{TH})^{2}(1 + \lambda{}V_{DS}) \\
   \underline{L &= 0.41 \mu{}m}
   \end{aligned}
   \end{equation*}
   #+end_export

   #+begin_src python :exports none
   return (130e-6/2)*(1.5e-6/40e-6)*((1 - 0.6)**2)*(1 + 0.06*1)
   #+end_src

   #+RESULTS:
   : 4.1340000000000004e-07

* Problem 2
a. Bulk of the transistors are connected to the source, $V_{B} = V_{S}$
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   V_{TH} &= V_{TH0} + \gamma{}(\sqrt{2\varphi_{F} + V_{BS}} - \sqrt{|2\varphi_{F}|}) \\
   V_{TH} &= V_{TH0} = 0.33 V \\
   \end{aligned}
   \end{equation*}
   #+end_export
   1. Transistor M_{1}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{SG} &= 2.5V - 1.7 V  = 0.8 V \\
      \\
      I_{D} &= \frac{\mu_{p}C_{OX}}{2}\frac{W}{L}(V_{SG} - V_{TH})^{2} \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{1} &= 2.72 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      return (2*0.4e-6*90e-6)/((120e-6)*(0.8 - 0.33)**2)
      #+end_src

      #+RESULTS:
      : 2.716161158895427e-06

   2. Transistor M_{2}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{SG} &= 1.7 V - 1 V  = 0.7 V \\
      \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{2} &= 4.38 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      return (2*0.4e-6*90e-6)/((120e-6)*(0.7 - 0.33)**2)
      #+end_src

      #+RESULTS:
      : 4.3827611395178975e-06

   3. Transistor M_{3}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{SG} &= 1 V \\
      \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{3} &= 1.37 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      return (2*0.4e-6*90e-6)/((120e-6)*(1 - 0.33)**2)
      #+end_src

      #+RESULTS:
      : 1.3366005791935844e-06

b. Bulk terminals are attached to the V_{DD}, $V_{B} = V_{DD}$.
   1. Transistor M_{1}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{BS} &= 2.5 V - 2.5 V = 0 V \\
      \\
      V_{TH} &= V_{TH0} + \gamma{}(\sqrt{2\varphi_{F} + V_{BS}} - \sqrt{|2\varphi_{F}|}) \\
      V_{TH} &= V_{TH0} = 0.33 V \\
      \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{1} &= 2.72 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

   2. Transistor M_{2}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{BS} &= 2.5 V - 1.7 V = 0.8 V \\
      \\
      V_{TH} &= V_{TH0} + \gamma{}(\sqrt{2\varphi_{F} + V_{BS}} - \sqrt{|2\varphi_{F}|}) \\
      V_{TH} &= V_{TH0} = 0.43 V \\
      \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{2} &= 8.23 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      import numpy as np
      return 0.33 + 0.25*(np.sqrt(2*0.35 + 0.8) - np.sqrt(2*0.35))
      #+end_src

      #+RESULTS:
      : 0.42702121121437836

      #+begin_src python :exports none
      return (2*0.4e-6*90e-6)/((120e-6)*(0.7 - 0.43)**2)
      #+end_src

      #+RESULTS:
      : 8.23045267489712e-06

   3. Transistor M_{3}
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{BS} &= 2.5 V - 1.0 V = 1.5 V \\
      \\
      V_{TH} &= V_{TH0} + \gamma{}(\sqrt{2\varphi_{F} + V_{BS}} - \sqrt{|2\varphi_{F}|}) \\
      V_{TH} &= V_{TH0} = 0.49 V \\
      \\
      W &= \frac{2LI_{D}}{\mu_{p}C_{OX}}\frac{1}{(V_{SG} - V_{TH})^{2}} \\
      W_{3} &= 2.31 \mu{}m
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      import numpy as np
      return 0.33 + 0.25*(np.sqrt(2*0.35 + 1.5) - np.sqrt(2*0.35))
      #+end_src

      #+RESULTS:
      : 0.4916449177212643

      #+begin_src python :exports none
      return (2*0.4e-6*90e-6)/((120e-6)*(1 - 0.49)**2)
      #+end_src

      #+RESULTS:
      : 2.306805074971165e-06

* Problem 3
1. Testbench and I_{D}-V_{GS} characteristics of NMOS and PMOS
   a. NMOS
      a. Testbench
         #+CAPTION: NMOS Testbench
         #+NAME: fig:nmos-testbench
         #+attr_latex: :width 300px
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/a/nmos-testbench.pdf]]
      b. I_{D}-V_{GS}
         #+CAPTION: NMOS I_{D}-V_{GS}
         #+NAME: fig:nmos-id-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/a/nmos-id-vgs.pdf]]
   b. PMOS
      a. Testbench
         #+CAPTION: PMOS Testbench
         #+NAME: fig:pmos-testbench
         #+attr_latex: :width 300px
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/a/pmos-testbench.pdf]]
      b. I_{S}-V_{GS}
         #+CAPTION: PMOS I_{S}-V_{GS}
         #+NAME: fig:pmos-is-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/a/pmos-is-vgs.pdf]]
2. $\mu_{n(p)}C_{OX}$ and $V_{THn(p)}$

   Assuming that channel length modulation is negligible, $V_{THn}$ for NMOS can be derived
   from the following relation:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   I_{D} &= \frac{\mu_{n}C_{ox}}{2} \frac{W}{L} (V_{GS} - V_{THn})^2 \\
   \frac{2 I_{D}}{\mu_{n}C_{ox}}\frac{L}{W} &=  (V_{GS} - V_{THn})^2 \\
   \sqrt{\frac{2 I_{D}}{\mu_{n}C_{ox}}\frac{L}{W}} &=  V_{GS} - V_{THn} \\
   \end{aligned}
   \end{equation*}
   #+end_export
   V_{THn} is the x-axis intercept when the saturation region is extrapolated.
   In the case of PMOS, the relation becomes:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   \sqrt{\frac{2 I_{S}}{\mu_{p}C_{ox}}\frac{L}{W}} &=  V_{SG} + V_{THp} \\
   \end{aligned}
   \end{equation*}
   #+end_export
   For deriving $\mu_{n}C_{OX}$, since V_{THn(p)} is constant at specific temperatures.
   Differentiating both sides with respect to V_{GS(SG)} will give:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   \frac{d}{dV_{GS}}\sqrt{\frac{2 I_{D}}{\mu_{n}C_{ox}}\frac{L}{W}} &=  \frac{d}{dV_{GS}}(V_{GS} - V_{THn}) \\
   \frac{1}{2} \frac{dI_{D}}{dV_{GS}} \sqrt{\frac{2}{I_{D}\mu_{n}C_{ox}}\frac{L}{W}} &=  1 \\
   \sqrt{\mu_{n}C_{ox}} &= \frac{1}{2} \frac{dI_{D}}{dV_{GS}} \sqrt{\frac{2}{I_{D}}\frac{L}{W}} \\
   \mu_{n}C_{ox} &= \frac{1}{2} \frac{L}{W} \frac{1}{I_{D}}(\frac{dI_{D}}{dV_{GS}})^{2} \\
   \mu_{n}C_{ox} &= \frac{1}{6 I_{D}}(\frac{dI_{D}}{dV_{GS}})^{2} \\
   \end{aligned}
   \end{equation*}
   #+end_export
   In the case for PMOS, the relation becomes:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   \mu_{p}C_{ox} &= \frac{1}{6 I_{S}}(\frac{dI_{S}}{dV_{SG}})^{2} \\
   \end{aligned}
   \end{equation*}
   #+end_export

   a. NMOS
      a. $\mu_{n}C_{OX}$
         # $= 306 \mu{}AV^{-2}$
         #+CAPTION: NMOS \mu_{n}C_{OX}-V_{GS}
         #+NAME: fig:nmos-ucox-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/b/nmos-ucox-vgs.pdf]]
      b. $V_{THn} = 0.44V$
         #+CAPTION: NMOS $\sqrt{I_{D}}-V_{GS}$
         #+NAME: fig:nmos-sqrt-id-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/b/nmos-sqrt-id-vgs.pdf]]
   b. PMOS
      a. $\mu_{p}C_{OX}$
         # $= 49 \mu{}AV^{-2}$
         #+CAPTION: PMOS \mu_{p}C_{OX}-V_{GS}
         #+NAME: fig:pmos-ucox-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/b/pmos-ucox-vgs.pdf]]
      b. $V_{THp} = -0.42V$
         #+CAPTION: PMOS $\sqrt{I_{S}}-V_{GS}$
         #+NAME: fig:nmos-sqrt-is-vgs
         #+ATTR_LATEX: :placement [H]
         [[file:img/q3/b/pmos-sqrt-is-vgs.pdf]]

* Problem 4
a. Testbench and I_{D}-V_{DS} characteristics of NMOS and PMOS
   a. NMOS
      1. Testbench
         #+CAPTION: NMOS Testbench
         #+NAME: fig:nmos-testbench-2
         #+attr_latex: :width 300px
         #+ATTR_LATEX: :placement [H]
         [[file:img/q4/a/nmos-testbench.pdf]]
      2. I_{D}-V_{DS} characteristics
         #+CAPTION: NMOS I_{D}-V_{DS}
         #+NAME: fig:nmos-id-vds
         #+ATTR_LATEX: :placement [H]
         [[file:img/q4/a/nmos-id-vds.pdf]]
   b. PMOS
      1. Testbench
         #+CAPTION: PMOS Testbench
         #+NAME: fig:pmos-testbench-2
         #+attr_latex: :width 300px
         #+ATTR_LATEX: :placement [H]
         [[file:img/q4/a/pmos-testbench.pdf]]
      2. I_{S}-V_{DS} characteristics
         #+CAPTION: PMOS I_{S}-V_{DS}
         #+NAME: fig:nmos-id-vds
         #+ATTR_LATEX: :placement [H]
         [[file:img/q4/a/pmos-is-vds.pdf]]
b. $\lambda_{n(p)}$

   Drain current characteristics for NMOS under saturation conditions:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   I_{D} &= \frac{\mu_{n}C_{ox}}{2} \frac{W}{L} (V_{GS} - V_{TH})^2(1 + \lambda_{n}V_{DS}) \\
   \end{aligned}
   \end{equation*}
   #+end_export
   Differentiating both side with respect to V_{DS}.
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   \frac{dI_{D}}{dV_{DS}} &= \frac{d}{dV_{DS}} (\frac{\mu_{n}C_{ox}}{2} \frac{W}{L} (V_{GS} - V_{TH})^2(1 + \lambda_{n} V_{DS})) \\
   \frac{dI_{D}}{dV_{DS}} &= \frac{\mu_{n}C_{ox}}{2} \frac{W}{L} (V_{GS} - V_{TH})^2 \lambda_{n} \\
   \end{aligned}
   \end{equation*}
   #+end_export
   Assuming that the body-effect is small:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   I_{D} &\approx \frac{\mu_{n}C_{ox}}{2} \frac{W}{L} (V_{GS} - V_{TH})^2 \\
   \\
   \frac{dI_{D}}{dV_{DS}} &\approx I_{D} \lambda_{n} \\
   \lambda_{n} &\approx \frac{1}{I_{D}} \frac{dI_{D}}{dV_{DS}}
   \end{aligned}
   \end{equation*}
   #+end_export
   In the case of PMOS:
   #+begin_export latex
   \begin{equation*}
   \begin{aligned}
   \lambda_{p} &\approx \frac{1}{I_{S}} \frac{dI_{S}}{dV_{SD}}
   \end{aligned}
   \end{equation*}
   #+end_export

   a. $\lambda_{n} = 0.18 V^{-1}$
      #+CAPTION: NMOS $\lambda_{n}-V_{DS}$
      #+NAME: fig:nmos-d-id-id
      #+attr_latex: :width 350px
      #+ATTR_LATEX: :placement [H]
      [[file:img/q4/b/nmos-d-id-id.pdf]]

      #+begin_src python :results file :exports none
      from pandas import read_csv
      import matplotlib.pyplot as plt
      import numpy as np

      # Import graph format
      try:
          plt.style.use("../../../../graph-formats/myGraphs1.mplstyle")
      except:
          pass

      # Read data
      df = read_csv("data/q4/b/nmos-d-id-id.txt", delimiter = "\t")

      # Min value
      argmin = np.argmin(df.iloc[:, 1].to_numpy())

      # Plot
      plt.plot(df.iloc[:, 0].to_numpy(), df.iloc[:, 1].to_numpy())
      plt.scatter(df.iloc[:,0].to_numpy()[argmin], df.iloc[:,1].to_numpy()[argmin], c = "r", marker = "x")

      # Label
      plt.xlabel("$V_{DS}$")
      plt.ylabel("$\lambda_{n}$")

      # Range
      xlimit = (0, 1.8)
      ylimit = (0, 0.2)
      plt.ylim(ylimit)
      plt.xlim(xlimit)

      # Grid
      plt.minorticks_on()
      plt.grid()

      fname = "img/q4/b/nmos-d-id-id.svg"
      plt.savefig(fname)
      return fname
      #+end_src

      #+RESULTS:
      [[file:img/q4/b/nmos-d-id-id.svg]]

   b. $\lambda_{p} = - 0.022 V^{-1}$
      #+CAPTION: PMOS $\lambda_{p}-V_{DS}$
      #+NAME: fig:nmos-d-is-is
      #+attr_latex: :width 350px
      #+ATTR_LATEX: :placement [H]
      [[file:img/q4/b/pmos-d-is-is.pdf]]
      #+begin_src python :results file :exports none
      from pandas import read_csv
      import matplotlib.pyplot as plt
      import numpy as np

      # Import graph format
      try:
          plt.style.use("../../../../graph-formats/myGraphs1.mplstyle")
      except:
          pass

      # Read data
      df = read_csv("data/q4/b/pmos-d-is-is.txt", delimiter = "\t")

      # Max value
      argmax = np.argmax(df.iloc[:, 1].to_numpy())

      # Plot
      plt.plot(df.iloc[:, 0].to_numpy(), df.iloc[:, 1].to_numpy())
      plt.scatter(df.iloc[:,0].to_numpy()[argmax], df.iloc[:,1].to_numpy()[argmax], c = "r", marker = "x")

      # Label
      plt.xlabel("$V_{DS}$")
      plt.ylabel("$\lambda_{p}$")

      # Range
      xlimit = (-1.8, 0)
      ylimit = (-0.2, 0)
      plt.ylim(ylimit)
      plt.xlim(xlimit)

      # Grid
      plt.minorticks_on()
      plt.grid()

      fname = "img/q4/b/pmos-d-is-is.svg"
      plt.savefig(fname)
      return fname
      #+end_src

      #+RESULTS:
      [[file:img/q4/b/pmos-d-is-is.svg]]

* Problem 5
g_{m} for NMOS is approximately:
#+begin_export latex
\begin{equation*}
\begin{align}
g_{m} &\approx \frac{\partial{I_{D}}}{\partial{V_{GS}}}
\end{align}
\end{equation*}
#+end_export
For PMOS:
#+begin_export latex
\begin{equation*}
\begin{align}
g_{m} &\approx \frac{\partial{I_{S}}}{\partial{V_{SG}}}
\end{align}
\end{equation*}
#+end_export
1. $\frac{g_{m}}{I_{D}}-V_{GS}$
   a. NMOS
      #+CAPTION: NMOS $\frac{g_{m}}{I_{D}}-V_{GS}$
      #+NAME: fig:nmos-d-id-id-vgs
      #+ATTR_LATEX: :placement [H]
      [[file:img/q5/a/nmos-d-id-id-vgs.pdf]]
   b. PMOS
      #+CAPTION: PMOS $\frac{g_{m}}{I_{S}}-V_{GS}$
      #+NAME: fig:pmos-d-is-is-vgs
      #+ATTR_LATEX: :placement [H]
      [[file:img/q5/a/pmos-d-is-is-vgs.pdf]]
2. $max(|\frac{g_{m}}{I_{D(S)}}|)$
   a. NMOS

      $max(|\frac{g_{m}}{I_{D}}|) = 30.4 V^{-1}$
   b. PMOS

      $max(|\frac{g_{m}}{I_{S}}|) = 31.7 V^{-1}$
3. Slope factor, n
   a. NMOS
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      max(|\frac{g_{m}}{I_{D}}|) &= 30.4 V^{-1}\\\\
      \frac{1}{nV_{t}} &= 30.4 V^{-1}\\
      n &= \frac{1}{0.026 \times 30.4}\\
      n &= 1.27 \\
      \end{aligned}
      \end{equation*}
      #+end_export
   b. PMOS
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      max(|\frac{g_{m}}{I_{S}}|) &= 31.7 V^{-1}\\\\
      \frac{1}{nV_{t}} &= 31.7 V^{-1}\\
      n &= \frac{1}{0.026 \times 31.7}\\
      n &= 1.21 \\
      \end{aligned}
      \end{equation*}
      #+end_export

* Problem 6
a. Small-signal Model
   #+CAPTION: Small signal model
   #+NAME: fig:small-signal-model
   #+attr_latex: :width 350px
   #+ATTR_LATEX: :placement [H]
   [[file:img/q6/a/small-signal-model.pdf]]
b. $\lambda = 0 V^{-1}$
   a. $A_{V} = \frac{v_{out}}{v_{in}}$
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      (g_{m1}v_{in} + g_{m2} v_{out}) &= 0 \\
      A_{V} = \frac{v_{out}}{v_{in}} &= -\frac{g_{m1}}{g_{m2}} \\
      \end{aligned}
      \end{equation*}
      #+end_export
   b. $R_{out}$
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      R_{out} &= \frac{1}{g_{m2}}
      \end{aligned}
      \end{equation*}
      #+end_export
c. $\lambda \neq 0 V^{-1}$
   a. $A_{V} = \frac{v_{out}}{v_{in}}$
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      -v_{out} &= (g_{m1}v_{in} + g_{m2} v_{out})(r_{o1} // r_{o2}) \\
      -v_{in} g_{m1}(r_{o1} // r_{o2}) &= (1 + g_{m2} (r_{o1} // r_{o2}))v_{out} \\
      A_{V} = \frac{v_{out}}{v_{in}} &= -\frac{g_{m1}}{g_{m2} + \frac{1}{r_{o1}} + \frac{1}{r_{o2}}}
      \end{aligned}
      \end{equation*}
      #+end_export

   b. $R_{out}$
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      R_{out} &= \frac{1}{g_{m2} + \frac{1}{r_{o1}} + \frac{1}{r_{o2}}}
      \end{aligned}
      \end{equation*}
      #+end_export
* Problem 7
a. V_{out}-V_{in} relation when:
   a. M_{1} and M_{2} under subthreshold conditions
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{TH_{n}} &= 0.44 V \\
      V_{TH_{p}} &= -0.42 V \\
      \\
      \mu_{n}C_{OX_{n}} &= 306 \mu{}AV^{-2} \\
      \mu_{p}C_{OX_{p}} &= 49 \mu{}AV^{-2} \\
      \\
      n_{n} &= 1.27 \\
      n_{p} &= 1.21 \\
      \\
      I_{D_{1}} &= I_{D_{2}} \\
      (\mu_{n}C_{OX_{n}}(n - 1)\frac{W_{n}}{L_{n}}V_{T}^{2}) e^{\frac{V_{in} - V_{TH_{n}}}{n_{n}V_{T}}} &=
      (\mu_{p}C_{OX_{p}}(n - 1)\frac{W_{p}}{L_{p}}V_{T}^{2}) e^{\frac{V_{DD} - V_{out} + V_{TH_{p}}}{n_{p}V_{T}}} \\
      247 e^{\frac{V_{in} - 0.44}{0.033}} &= 154 e^{\frac{1.8 - V_{out} - 0.42}{0.031}} \\
      ln(1.6) + \frac{V_{in} - 0.44}{0.033} &= \frac{1.38 - V_{out}}{0.031} \\
      0.015 + V_{in} - 0.44 &\approx 1.38 - V_{out} \\
      V_{out} &\approx 1.8V - V_{in} \\
      \\
      V_{in} &< 0.44 V
      \end{aligned}
      \end{equation*}
      #+end_export

      #+begin_src python :exports none
      return 306*(1.27 - 1)*(3/1)
      #+end_src

      #+RESULTS:
      : 247.86

      #+begin_src python :exports none
      return 49*(1.21 - 1)*(15/1)
      #+end_src

      #+RESULTS:
      : 154.35

      #+begin_src python :exports none
      return 247.86/154.35
      #+end_src

      #+RESULTS:
      : 1.6058309037900875

   b. M_{1} and M_{2} at saturation
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      I_{D_{1}} &= I_{D_{2}} \\
      \frac{\mu_{n}C_{OX_{n}}}{2}\frac{W_{n}}{L_{n}}(V_{GS_{1}} - V_{TH_{n}})^{2} &=
      \frac{\mu_{p}C_{OX_{p}}}{2}\frac{W_{p}}{L_{p}}(V_{SG_{2}} + V_{TH_{p}})^{2} \\
      918(V_{in} - 0.44)^{2} &= 735(1.8 - V_{out} - 0.42)^{2} \\
      1.12(V_{in} - 0.44) &= 1.38 - V_{out} \\
      V_{out} &= 1.87V - 1.12V_{in} \\
      \end{aligned}
      \end{equation*}
      #+end_export
      Saturation conditions for M_{1}:
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{GS_{1}} - V_{TH_{1}} &< V_{DS} \\
      V_{in} - 0.44V &< V_{out} \\
      V_{in} - 0.44V &< 1.87V - 1.12V_{in} \\
      2.12V_{in} &< 2.31V \\
      V_{in} &< 1.09V \\
      \end{aligned}
      \end{equation*}
      #+end_export
      Condition for M_1 and M_2 at saturation:
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      0.44V < V_{in} < 1.09V \\
      \end{aligned}
      \end{equation*}
      #+end_export

   c. M_{1} at triode and M_{2} at saturation
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      I_{D_{1}} &= I_{D_{2}} \\
      \mu_{n}C_{OX_{n}}\frac{W_{n}}{L_{n}}[(V_{GS_{1}} - V_{TH_{n}})V_{DS} - \frac{V_{DS}^2}{2}] &=
      \frac{\mu_{p}C_{OX_{p}}}{2}\frac{W_{p}}{L_{p}}(V_{SG_{2}} + V_{TH_{p}})^{2} \\
      2.50[(V_{in} - 0.44V)V_{out} - \frac{V_{out}^2}{2}] &= (V_{DD} - V_{out} - 0.42V)^{2} \\
      V_{out} = \frac{(2.5V_{in} + 1.66) - \sqrt{(2.5V_{in} + 1.66)^{2} - 17.1}}{4.5}
      \end{aligned}
      \end{equation*}
      #+end_export
      Condition:
      #+begin_export latex
      \begin{equation*}
      \begin{aligned}
      V_{in} > 1.09V \\
      \end{aligned}
      \end{equation*}
      #+end_export

   #+begin_src python :results file :exports results
   import matplotlib.pyplot as plt
   import numpy as np
   # Import graph format
   try:
       plt.style.use("../../../../graph-formats/myGraphs1.mplstyle")
   except:
       pass
   # Equations
   # V_{out} = 1.8V - V_{in}, V_{in} < 0.44 V
   # V_{out} = 1.87V - 1.12V_{in}, 0.44V < V_{in} < 1.09V
   # V_{out} = {(1.66 + 2.5V_{in}) - \sqrt{(1.66 + 2.5V_{in})^{2} - 26.6}}/{7}, V_{in} > 1.09V
   vi_1 = np.arange(0, 0.44, 0.01)
   vi_2 = np.arange(0.44, 1.09, 0.01)
   vi_3 = np.arange(1.09, 1.80, 0.01)

   def vo_1(vin):
       return 1.8 - vin

   def vo_2(vin):
       return 1.87 - 1.12*vin

   def vo_3(vin):
       return ((1.66 + 2.5*vin) - np.sqrt((1.66 + 2.5*vin)**2 - 17.1))/4.5

   plt.plot(vi_1, vo_1(vi_1), c = "r")
   plt.plot(vi_2, vo_2(vi_2), c = "r")
   plt.plot(vi_3, vo_3(vi_3), c = "r")

   # Label
   plt.xlabel("$V_{in}$")
   plt.ylabel("$V_{out}$")

   # Range
   xlimit = (0, 1.8)
   ylimit = (0, 1.8)
   plt.xlim(xlimit)
   plt.ylim(ylimit)

   # Grid
   plt.minorticks_on()
   plt.grid()

   fname = "img/q7/a/cir1-vout-cal.pdf"
   plt.savefig(fname)
   return fname
   #+end_src

   #+RESULTS:
   [[file:img/q7/a/cir1-vout-cal.pdf]]

b. Simulated V_{out}-V_{in} relation using LTSpice

   #+begin_src python :results file :exports results
   from pandas import read_csv
   import matplotlib.pyplot as plt
   import numpy as np
   # Import graph format
   try:
       plt.style.use("../../../../graph-formats/myGraphs1.mplstyle")
   except:
       pass
   # Equations
   # V_{out} = 1.8V - V_{in}, V_{in} < 0.44 V
   # V_{out} = 1.87V - 1.12V_{in}, 0.44V < V_{in} < 1.09V
   # V_{out} = {(1.66 + 2.5V_{in}) - \sqrt{(1.66 + 2.5V_{in})^{2} - 26.6}}/{7}, V_{in} > 1.09V
   vi_1 = np.arange(0, 0.44, 0.01)
   vi_2 = np.arange(0.44, 1.09, 0.01)
   vi_3 = np.arange(1.09, 1.80, 0.01)

   def vo_1(vin):
       return 1.8 - vin

   def vo_2(vin):
       return 1.87 - 1.12*vin

   def vo_3(vin):
       return ((1.66 + 2.5*vin) - np.sqrt((1.66 + 2.5*vin)**2 - 17.1))/4.5

   # Plot
   plt.plot(vi_1, vo_1(vi_1), c = "r")
   plt.plot(vi_2, vo_2(vi_2), c = "r")
   plt.plot(vi_3, vo_3(vi_3), c = "r", label = 'Calculation')

   # LTSpice Simulation data
   df = read_csv("data/q7/b/cir1-vout.txt", delimiter = "\t")

   # Plot
   plt.plot(df.iloc[:, 0].to_numpy(), df.iloc[:, 1].to_numpy(), c = 'b', label = 'Spice simulation')

   # Label
   plt.xlabel("$V_{in}$")
   plt.ylabel("$V_{out}$")

   # Range
   xlimit = (0, 1.8)
   ylimit = (0, 1.8)
   plt.xlim(xlimit)
   plt.ylim(ylimit)

   # Grid
   plt.minorticks_on()
   plt.grid()

   # Legend
   plt.legend()

   fname = "img/q7/a/cir1-vout-cal.pdf"
   plt.savefig(fname)
   return fname
   #+end_src

   #+RESULTS:
   [[file:img/q7/a/cir1-vout-cal.pdf]]

c. Maximum small-signal gain
   For maximum small-signal gain:
   #+begin_export latex
   \begin{equation*}
   \begin{align}
   max(|A_{V}|) &= max(|\frac{\partial{V_{out}}}{\partial{V_{in}}}|) \\
   \\
   V_{in} &\approx 0.69 V
   \end{align}
   \end{equation*}
   #+end_export
   #+begin_src python :results file :exports results
      from pandas import read_csv
      import matplotlib.pyplot as plt
      import numpy as np

      # Import graph format
      try:
          plt.style.use("../../../../graph-formats/myGraphs1.mplstyle")
      except:
          pass

      # Read data
      df = read_csv("data/q7/c/cir1-d-vout.txt", delimiter = "\t")

      # Min value
      argmin = np.argmin(df.iloc[:, 1].to_numpy())

      # Plot
      plt.plot(df.iloc[:, 0].to_numpy(), df.iloc[:, 1].to_numpy())
      plt.scatter(df.iloc[:,0].to_numpy()[argmin], df.iloc[:,1].to_numpy()[argmin], c = "r", marker = "x")
      plt.annotate("{0:.2f} V".format(df.iloc[:,0].to_numpy()[argmin]), (df.iloc[:,0].to_numpy()[argmin], df.iloc[:,1].to_numpy()[argmin]+0.05))

      # Label
      plt.xlabel("$V_{in}$")
      plt.ylabel("$A_{v}$")

      # Range
      xlimit = (0, 1.8)
      # ylimit = (0, 0.2)
      plt.xlim(xlimit)
      # plt.ylim(ylimit)

      # Grid
      plt.minorticks_on()
      plt.grid()

      fname = "img/q7/c/cir1-d-vout.pdf"
      plt.savefig(fname)
      return fname
   #+end_src

   #+RESULTS:
   [[file:img/q7/c/cir1-d-vout.pdf]]
d.
e.
